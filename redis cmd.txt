1  SET key value
   This command sets the value at the specified key.
   
2  GET key
   Gets the value of a key.
   
3  DEL key
   This command deletes the key, if it exists.
   
4  FLUSHALL 
   Delete all the keys of all the existing databases, not just the currently selected one.
   
5  KEYS pattern
   Returns all keys matching pattern
   
6  SETEX key seconds value
   Sets the value with the expiry of a key
   
7  SETNX key value
   Sets the value of a key, only if the key does not exist
   
8  SETRANGE key offset value
   Overwrites the part of a string at the key starting at the specified offset
   
9  STRLEN key
   Gets the length of the value stored in a key

10 MSET key value [key value ...]
   Sets multiple keys to multiple values

11 MSETNX key value [key value ...]
   Sets multiple keys to multiple values, only if none of the keys exist

12 PSETEX key milliseconds value
   Sets the value and expiration in milliseconds of a key

13 INCR key
   Increments the integer value of a key by one

14 INCRBY key increment
   Increments the integer value of a key by the given amount

15 INCRBYFLOAT key increment
   Increments the float value of a key by the given amount

16 DECR key
   Decrements the integer value of a key by one

17 DECRBY key decrement
   Decrements the integer value of a key by the given number

18 APPEND key value
   Appends a value to a key
      
************************Hashes************************
   
19 HKEYS key
   Get all the fields in a hash
   
20 HSET key field value
   Set the string value of a hash field
   
21 HSETNX key field value
   Set the value of a hash field, only if the field does not exist
   
22 HMSET key field value [field value ...]
   Set multiple hash fields to multiple values
   
23 HGET key field
   Get the value of a hash field
   
24 HGETALL key
   Get all the fields and values in a hash
   
25 HMGET key field [field ...]
   Get the values of all the given hash fields
   
26 HDEL key field [field ...]
   Delete one or more hash fields
   
27 HEXISTS key field
   Determine if a hash field exists
   
28 HINCRBY key field increment
   Increment the integer value of a hash field by the given number
   
29 HINCRBYFLOAT key field increment
   Increment the float value of a hash field by the given amount
   
30 HLEN key
   Get the number of fields in a hash
   
31 HSTRLEN key field
   Get the length of the value of a hash field
   
32 HVALS key
   Get all the values in a hash
   
33 HSCAN key cursor [MATCH pattern] [COUNT count]
   Incrementally iterate hash fields and associated values

************************Lists*************************
 
34 LPUSH key value [value ...]
   Prepend one or multiple values to a list
   
35 LPUSHX key value
   Prepend a value to a list, only if the list exists
   
36 LPOP key
   Remove and get the first element in a list
   
37 RPUSH key value [value ...]
   Append one or multiple values to a list
   
38 RPUSHX key value
   Append a value to a list, only if the list exists
   
39 RPOP key
   Remove and get the last element in a list
   
40 RPOPLPUSH source destination
   Remove the last element in a list, prepend it to another list and return it
   
41 LRANGE key start stop
   Get a range of elements from a list
   
42 LREM key count value
   Remove elements from a list
   
43 LSET key index value
   Set the value of an element in a list by its index
   
44 LTRIM key start stop
   Trim a list to the specified range
   
45 BLPOP key [key ...] timeout
   Remove and get the first element in a list, or block until one is available
   
46 BRPOP key [key ...] timeout
   Remove and get the last element in a list, or block until one is available
   
47 BRPOPLPUSH source destination timeout
   Pop a value from a list, push it to another list and return it; or block until one is available
   
48 LINDEX key index
   Get an element from a list by its index
   
49 LINSERT key BEFORE|AFTER pivot value
   Insert an element before or after another element in a list
   
50 LLEN key
   Get the length of a list

************************Sets**************************

1  SADD key member [member ...]
   Add one or more members to a set
   
2  SMEMBERS key
   Get all the members in a set
   
3  SCARD key
   Get the number of members in a set
   
4  SDIFF key [key ...]
   Subtract multiple sets
   
5  SDIFFSTORE destination key [key ...]
   Subtract multiple sets and store the resulting set in a key
   
6  SUNION key [key ...]
   Add multiple sets
   
7  SUNIONSTORE destination key [key ...]
   Add multiple sets and store the resulting set in a key
   
8  SREM key member [member ...]
   Remove one or more members from a set
   
9  SPOP key [count]
   Remove and return one or multiple random members from a set
   
10 SINTER key [key ...]
   Intersect multiple sets
   
11 SINTERSTORE destination key [key ...]
   Intersect multiple sets and store the resulting set in a key
   
12 SMOVE source destination member
   Move a member from one set to another
   
13 SISMEMBER key member
   Determine if a given value is a member of a set
   
14 SRANDMEMBER key [count]
   Get one or multiple random members from a set
   
15 SSCAN key cursor [MATCH pattern] [COUNT count]
   Incrementally iterate Set elements

************************Sorted Sets*******************

1  ZADD key  1 a 2 b 3 c 4 d
   
2  ZRANGE key start end (0 -1)
   get key data
   
3  ZSCORE key member
   Get the score associated with the given member in a sorted set
   
4  ZCARD key
   get length
   
5  ZCOUNT key start end
   
6  ZREM key member [member ...]
   Remove one or more members from a sorted set
   
7  ZRANK key member
   Determine the index of a member in a sorted set
   
8  ZREVRANK key member
   Determine the index of a member in a sorted set, with scores ordered from high to low
   
9  ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT offset count]
   Return a range of members in a sorted set, by score
   
10 ZREVRANGEBYLEX key max min [LIMIT offset count]
   Return a range of members in a sorted set, by lexicographical range, ordered from higher to lower strings.
   
11 ZREMRANGEBYLEX key min max
   Remove all members in a sorted set between the given lexicographical range
   
12 ZREMRANGEBYRANK key start stop
   Remove all members in a sorted set within the given indexes
   
13 ZREMRANGEBYSCORE key min max
   Remove all members in a sorted set within the given scores
   
14 ZREVRANGE key start stop [WITHSCORES]
   Return a range of members in a sorted set, by index, with scores ordered from high to low
   
15 ZREVRANGEBYSCORE key max min [WITHSCORES] [LIMIT offset count]
   Return a range of members in a sorted set, by score, with scores ordered from high to low
   
16 ZUNIONSTORE destination numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX]
   Add multiple sorted sets and store the resulting sorted set in a new key
   
17 ZSCAN key cursor [MATCH pattern] [COUNT count]
   Incrementally iterate sorted sets elements and associated scores


*********SUBSCRIBE, UNSUBSCRIBE and PUBLISH***********


